import rateLimit from 'express-rate-limit';
import slowDown from 'express-slow-down';
import { Request, Response, NextFunction } from 'express';

/**
 * –ñ–µ—Å—Ç–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π
 * –ú–∞–∫—Å–∏–º—É–º 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 5 –º–∏–Ω—É—Ç —Å IP
 */
export const deliveryRateLimit = rateLimit({
  windowMs: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
  max: 10, // –º–∞–∫—Å–∏–º—É–º 10 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å IP –∑–∞ 5 –º–∏–Ω—É—Ç
  message: {
    success: false,
    error: {
      message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.',
      statusCode: 429,
      timestamp: new Date().toISOString()
    }
  },
  standardHeaders: true,
  legacyHeaders: false,
  skip: (req) => {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –≤ development
    return process.env.NODE_ENV === 'development' && req.headers['x-admin'] === 'true';
  }
});

/**
 * –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö API –∞–¥—Ä–µ—Å–æ–≤
 * –ú–∞–∫—Å–∏–º—É–º 30 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 10 –º–∏–Ω—É—Ç —Å IP
 */
export const addressRateLimit = rateLimit({
  windowMs: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç
  max: 30, // –º–∞–∫—Å–∏–º—É–º 30 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å IP –∑–∞ 10 –º–∏–Ω—É—Ç
  message: {
    success: false,
    error: {
      message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API –∞–¥—Ä–µ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç.',
      statusCode: 429,
      timestamp: new Date().toISOString()
    }
  },
  standardHeaders: true,
  legacyHeaders: false
});

/**
 * –û–±—â–µ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö API
 * –ú–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 15 –º–∏–Ω—É—Ç —Å IP
 */
export const generalRateLimit = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 100, // –º–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å IP –∑–∞ 15 –º–∏–Ω—É—Ç
  message: {
    success: false,
    error: {
      message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      statusCode: 429,
      timestamp: new Date().toISOString()
    }
  },
  standardHeaders: true,
  legacyHeaders: false
});

/**
 * –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
 * –ù–∞—á–∏–Ω–∞–µ—Ç –∑–∞–º–µ–¥–ª—è—Ç—å –ø–æ—Å–ª–µ 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –º–∏–Ω—É—Ç—É
 */
export const speedLimiter: any = slowDown({
  windowMs: 1 * 60 * 1000, // 1 –º–∏–Ω—É—Ç–∞
  delayAfter: 5, // –Ω–∞—á–∏–Ω–∞—Ç—å –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ 5 –∑–∞–ø—Ä–æ—Å–æ–≤
  delayMs: () => 500, // –¥–æ–±–∞–≤–ª—è—Ç—å 500–º—Å –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å —Å–≤—ã—à–µ –ª–∏–º–∏—Ç–∞ (–Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
  maxDelayMs: 5000, // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 5 —Å–µ–∫—É–Ω–¥
  skipFailedRequests: false,
  skipSuccessfulRequests: false,
  validate: { delayMs: false } // –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
});

/**
 * Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
export const suspiciousActivityLogger = (req: any, res: any, next: any) => {
  const ip = req.ip || req.connection.remoteAddress;
  const userAgent = req.get('User-Agent');
  const timestamp = new Date().toISOString();
  
  // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  if (req.path.includes('/addresses') && req.method === 'GET') {
    console.log(`üö® Address API Request: ${timestamp} | IP: ${ip} | UA: ${userAgent} | Path: ${req.path}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –±–æ—Ç–æ–≤ –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    if (!userAgent || 
        userAgent.includes('bot') || 
        userAgent.includes('crawler') || 
        userAgent.includes('spider') ||
        userAgent.length < 10) {
      console.log(`ü§ñ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π User-Agent: ${userAgent}`);
    }
  }
  
  next();
};

/**
 * Middleware –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ HTTP –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
 */
export const cacheHeaders = (maxAge: number = 60) => {
  return (req: any, res: any, next: any) => {
    // –ö–µ—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ GET –∑–∞–ø—Ä–æ—Å—ã
    if (req.method === 'GET') {
      res.set({
        'Cache-Control': `public, max-age=${maxAge}`,
        'ETag': `W/"${Date.now()}"`,
        'Last-Modified': new Date().toUTCString()
      });
    }
    next();
  };
};
